package com.climawan.comp6844001.pertemuan5.hakubank.activities;

import androidx.appcompat.app.AppCompatActivity;

import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import com.climawan.comp6844001.pertemuan5.hakubank.R;
import com.climawan.comp6844001.pertemuan5.hakubank.database.AppDatabase;
import com.climawan.comp6844001.pertemuan5.hakubank.database.daos.AccountDao;
import com.climawan.comp6844001.pertemuan5.hakubank.database.entities.Account;
import com.climawan.comp6844001.pertemuan5.hakubank.database.implementation.AppDatabaseImpl;
import com.climawan.comp6844001.pertemuan5.hakubank.services.AuthEncodingService;

import java.util.Base64;

public class ActivateMBankingActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_activate_mbanking);

        accountDao = AppDatabaseImpl.getInstance(ActivateMBankingActivity.this).accountDao();

        activateMBankingActivity = new ActivateOnClickListener();

        etAccountNumber = findViewById(R.id.et_account_number);
        etCardNumber = findViewById(R.id.et_card_number);
        etPasscode = findViewById(R.id.et_passcode);
        btnActivate = findViewById(R.id.btn_activate);
    }

    @Override
    protected void onStart() {
        super.onStart();

        setListeners();
    }

    private void setListeners() {
        btnActivate.setOnClickListener(activateMBankingActivity);
    }

    private class ActivateOnClickListener implements View.OnClickListener {

        @Override
        public void onClick(View v) {
            ActivateMBankingActivity.this.accountNumber = ActivateMBankingActivity.this.etAccountNumber.getText().toString();
            ActivateMBankingActivity.this.cardNumber = ActivateMBankingActivity.this.etCardNumber.getText().toString();
            ActivateMBankingActivity.this.passcode = ActivateMBankingActivity.this.etPasscode.getText().toString();

            if (!this.validate()) return;

            this.insertNewAccount();
            this.saveActivatedCard();

            Intent intent = new Intent(ActivateMBankingActivity.this, LoginActivity.class);
            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
            startActivity(
                    new Intent(ActivateMBankingActivity.this, LoginActivity.class)
            );
        }

        private boolean insertNewAccount() {
            String accountNumber = ActivateMBankingActivity.this.accountNumber;
            int initialBalance = 50000;

            Account newAccount = new Account();
            newAccount.accountNumber = accountNumber;
            newAccount.balance = initialBalance;

            accountDao.insert(newAccount);

            return true;
        }

        private boolean saveActivatedCard() {
            String encodedAccountNumber = AuthEncodingService.encode(
                    ActivateMBankingActivity.this.accountNumber
            );
            String encodedCardNumber = AuthEncodingService.encode(
                    ActivateMBankingActivity.this.cardNumber
            );
            String encodedPasscode = AuthEncodingService.encode(
                    ActivateMBankingActivity.this.passcode
            );

            SharedPreferences preferences = ActivateMBankingActivity.this.getSharedPreferences(
                    getString(R.string.sp__storage_id), Context.MODE_PRIVATE
            );
            SharedPreferences.Editor editor = preferences.edit();
            editor.putString(
                    getString(R.string.sp__account_number_id),
                    ActivateMBankingActivity.this.accountNumber
            );
            editor.putString(
                    getString(R.string.sp__account_number_encoded_id),
                    encodedAccountNumber
            );
            editor.putString(
                    getString(R.string.sp__card_number_id),
                    encodedCardNumber
            );
            editor.putString(
                    getString(R.string.sp__passcode_id),
                    encodedPasscode
            );
            editor.apply();

            return true;
        }

        private boolean validate() {
            if (!this.validateAccountNumber()) return false;
            else if (!this.validateCardNumber()) return false;
            else if (!this.validatePasscode()) return false;

            return true;
        }

        private boolean validateAccountNumber() {
            if (ActivateMBankingActivity.this.accountNumber.length() != 10) {
                Toast.makeText(
                        ActivateMBankingActivity.this,
                        getString(R.string.activate_m_banking_activity__account_number_length_alert_text),
                        Toast.LENGTH_SHORT
                ).show();

                return false;
            }

            return true;
        }
        
        private boolean validateCardNumber() {
            if (ActivateMBankingActivity.this.cardNumber.length() != 16) {
                Toast.makeText(
                        ActivateMBankingActivity.this,
                        getString(R.string.activate_m_banking_activity__card_number_length_alert_text),
                        Toast.LENGTH_SHORT
                ).show();
                return false;
            }

            return true;
        }

        private boolean validatePasscode() {
            if (ActivateMBankingActivity.this.passcode.length() != 6) {
                Toast.makeText(
                        ActivateMBankingActivity.this,
                        getString(R.string.activate_m_banking_activity__passcode_length_alert_text),
                        Toast.LENGTH_SHORT
                ).show();
                return false;
            }

            return true;
        }
    }

    private AccountDao accountDao;

    private ActivateOnClickListener activateMBankingActivity;

    private EditText etAccountNumber;
    private EditText etCardNumber;
    private EditText etPasscode;
    private Button btnActivate;

    private String accountNumber;
    private String cardNumber;
    private String passcode;
}